################################################################################
# Copyright 2010 Andreas Neustifter (andreas.neustifter@gmail.com)
#
# This file is part of PhotoImport.
#
# PhotoImport is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# PhotoImport is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# PhotoImport. If not, see <http://www.gnu.org/licenses/>.
################################################################################
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Sat Nov  6 16:31:28 2010

import wx
import ConfigData

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class ConfigFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ConfigFrame.__init__
        kwds["style"] = wx.CAPTION|wx.CLOSE_BOX|wx.MINIMIZE_BOX|wx.MAXIMIZE_BOX|wx.SYSTEM_MENU|wx.RESIZE_BORDER|wx.TAB_TRAVERSAL|wx.CLIP_CHILDREN
        wx.Frame.__init__(self, *args, **kwds)
        self.mainpanel = wx.Panel(self, -1, style=wx.NO_BORDER)
        self.sizer_4_staticbox = wx.StaticBox(self.mainpanel, -1, "Destination Folder")
        self.sizer_6_staticbox = wx.StaticBox(self.mainpanel, -1, "File Renaming")
        self.sizer_2_staticbox = wx.StaticBox(self.mainpanel, -1, "Source Folder")
        self.srcrecursive = wx.CheckBox(self.mainpanel, -1, "Recursive")
        self.srcvalue = wx.TextCtrl(self.mainpanel, -1, "/media/EOS_DIGITAL/DCIM/100CANON/")
        self.srcselect = wx.Button(self.mainpanel, -1, ". . .")
        self.panel_2 = wx.Panel(self.mainpanel, -1)
        self.destvalue = wx.TextCtrl(self.mainpanel, -1, "/mnt/data/andi/fotos/sessions")
        self.destselect = wx.Button(self.mainpanel, -1, ". . .")
        self.foldernamelbl = wx.StaticText(self.mainpanel, -1, "Folder Naming")
        self.foldernamevalue = wx.TextCtrl(self.mainpanel, -1, "<date>_<name>")
        self.spacepanel1 = wx.Panel(self.mainpanel, -1)
        self.renamefiles = wx.CheckBox(self.mainpanel, -1, "Rename")
        self.filenamevalue = wx.TextCtrl(self.mainpanel, -1, "<date>-<time>.<ext>")
        self.spacepanel4 = wx.Panel(self.mainpanel, -1)
        self.spacepanel3 = wx.Panel(self.mainpanel, -1)
        self.cancelbtn = wx.Button(self.mainpanel, wx.ID_CANCEL, "")
        self.okbtn = wx.Button(self.mainpanel, wx.ID_OK, "")
        self.spacepanel2 = wx.Panel(self.mainpanel, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.evt_BrowseSource, self.srcselect)
        self.Bind(wx.EVT_BUTTON, self.evt_BrowseDest, self.destselect)
        self.Bind(wx.EVT_CHECKBOX, self.evt_renamefiles, self.renamefiles)
        self.Bind(wx.EVT_BUTTON, self.evt_cancelbtn, self.cancelbtn)
        self.Bind(wx.EVT_BUTTON, self.evt_okbtn, self.okbtn)
        # end wxGlade
        self.Bind(wx.EVT_CLOSE, self.evt_close, self)

        self.__get_config()

    def __set_properties(self):
        # begin wxGlade: ConfigFrame.__set_properties
        self.SetTitle("Configuration")
        self.SetSize((702, 300))
        self.srcrecursive.SetMinSize((100,37))
        self.srcvalue.SetMinSize((300, 27))
        self.srcselect.SetMinSize((60, 29))
        self.panel_2.SetMinSize((100,37))
        self.destvalue.SetMinSize((300, 27))
        self.destselect.SetMinSize((60, 29))
        self.foldernamelbl.SetMinSize((100, 17))
        self.foldernamevalue.SetMinSize((300, 27))
        self.spacepanel1.SetMinSize((65,29))
        self.renamefiles.SetMinSize((100, 37))
        self.filenamevalue.SetMinSize((300, 27))
        self.spacepanel4.SetMinSize((65,29))
        self.cancelbtn.SetMinSize((70, 29))
        self.okbtn.SetMinSize((100, 29))
        self.spacepanel2.SetMinSize((60, 29))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ConfigFrame.__do_layout
        mainsizer = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.StaticBoxSizer(self.sizer_6_staticbox, wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.HORIZONTAL)
        sizer_2 = wx.StaticBoxSizer(self.sizer_2_staticbox, wx.HORIZONTAL)
        sizer_2.Add(self.srcrecursive, 0, wx.LEFT|wx.RIGHT|wx.EXPAND, 6)
        sizer_2.Add(self.srcvalue, 1, wx.ALL, 4)
        sizer_2.Add(self.srcselect, 0, wx.ALL, 4)
        sizer_1.Add(sizer_2, 0, wx.ALL|wx.EXPAND, 4)
        sizer_4.Add(self.panel_2, 0, wx.LEFT|wx.RIGHT|wx.EXPAND, 6)
        sizer_4.Add(self.destvalue, 1, wx.ALL, 4)
        sizer_4.Add(self.destselect, 0, wx.ALL, 4)
        sizer_1.Add(sizer_4, 0, wx.ALL|wx.EXPAND, 4)
        sizer_5.Add(self.foldernamelbl, 0, wx.ALL|wx.ALIGN_RIGHT, 8)
        sizer_5.Add(self.foldernamevalue, 1, wx.ALL, 4)
        sizer_5.Add(self.spacepanel1, 0, wx.ALL|wx.EXPAND, 4)
        sizer_1.Add(sizer_5, 0, wx.ALL|wx.EXPAND, 4)
        sizer_6.Add(self.renamefiles, 0, wx.LEFT|wx.RIGHT|wx.EXPAND, 6)
        sizer_6.Add(self.filenamevalue, 1, wx.ALL, 4)
        sizer_6.Add(self.spacepanel4, 0, wx.ALL|wx.EXPAND, 4)
        sizer_1.Add(sizer_6, 0, wx.ALL|wx.EXPAND, 4)
        sizer_3.Add(self.spacepanel3, 1, wx.EXPAND, 0)
        sizer_3.Add(self.cancelbtn, 0, wx.ALL, 4)
        sizer_3.Add(self.okbtn, 0, wx.ALL, 4)
        sizer_3.Add(self.spacepanel2, 0, wx.ALL|wx.EXPAND, 4)
        sizer_1.Add(sizer_3, 0, wx.ALL|wx.EXPAND, 4)
        self.mainpanel.SetSizer(sizer_1)
        mainsizer.Add(self.mainpanel, 1, wx.EXPAND, 0)
        self.SetSizer(mainsizer)
        mainsizer.SetSizeHints(self)
        self.Layout()
        self.Centre()
        # end wxGlade

    def __get_config(self):
        self.config = ConfigData.ConfigData()
        self.srcrecursive.SetValue(self.config.srcrecursive)
        self.srcvalue.SetValue(self.config.srcvalue)
        self.destvalue.SetValue(self.config.destvalue)
        self.foldernamevalue.SetValue(self.config.foldernamevalue)
        self.renamefiles.SetValue(self.config.renamefiles)
        self.filenamevalue.SetValue(self.config.filenamevalue)
        self.evt_renamefiles(None)

    def __set_config(self):
        self.config.srcrecursive = self.srcrecursive.GetValue()
        self.config.srcvalue = self.srcvalue.GetValue()
        self.config.destvalue = self.destvalue.GetValue()
        self.config.foldernamevalue = self.foldernamevalue.GetValue()
        self.config.renamefiles = self.renamefiles.GetValue()
        self.config.filenamevalue = self.filenamevalue.GetValue()

    def evt_cancelbtn(self, event): # wxGlade: ConfigFrame.<event_handler>
        self.Close()
        event.Skip()

    def evt_okbtn(self, event): # wxGlade: ConfigFrame.<event_handler>
        import FileList
        self.__set_config()
        self.filelist = FileList.FileList(self.config, self)
        self.filelist.Filter()
        self.filelist.ShowDialog()
        event.Skip()

    def evt_BrowseSource(self, event): # wxGlade: ConfigFrame.<event_handler>
        dlg = wx.DirDialog(self, "Choose a Source Folder", style=wx.DD_DEFAULT_STYLE | wx.DD_NEW_DIR_BUTTON)
        dlg.SetPath(self.srcvalue.GetValue())
        if dlg.ShowModal() == wx.ID_OK:
            self.srcvalue.SetValue(dlg.GetPath())
        event.Skip()

    def evt_BrowseDest(self, event): # wxGlade: ConfigFrame.<event_handler>
        dlg = wx.DirDialog(self, "Choose a Destination Folder", style=wx.DD_DEFAULT_STYLE | wx.DD_NEW_DIR_BUTTON)
        dlg.SetPath(self.srcvalue.GetValue())
        if dlg.ShowModal() == wx.ID_OK:
            self.destvalue.SetValue(dlg.GetPath())
        event.Skip()

    def evt_close(self, event):
        self.__set_config()
        self.config.Save()
        event.Skip()

    def evt_renamefiles(self, event): # wxGlade: ConfigFrame.<event_handler>
        self.filenamevalue.Enable(self.renamefiles.GetValue())
        if event is not None:
            event.Skip()

# end of class ConfigFrame

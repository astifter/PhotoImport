################################################################################
# Copyright 2010 Andreas Neustifter (andreas.neustifter@gmail.com)
#
# This file is part of PhotoImport.
#
# PhotoImport is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# PhotoImport is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# PhotoImport. If not, see <http://www.gnu.org/licenses/>.
################################################################################
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Sun Nov  7 13:00:52 2010

import wx
import pyexiv2
import io

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class ImagePanel(wx.Panel):

    def __init__(self, *args, **kwds):
        # begin wxGlade: ImagePanel.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.image = None  # wxPython image
        wx.EVT_PAINT(self, self.OnPaint)

    def __set_properties(self):
        # begin wxGlade: ImagePanel.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ImagePanel.__do_layout
        pass
        # end wxGlade

    def display(self, imagename):
        exif = pyexiv2.ImageMetadata(imagename)
        exif.read()
        data = exif.previews[-1].data

        self.image = wx.ImageFromStream(io.BytesIO(data),wx.BITMAP_TYPE_JPEG)
        wi = self.image.GetWidth()
        hi = self.image.GetHeight()
        w,h = self.GetSizeTuple()

        scale = wi/w
        if (hi/h) > scale:
            scale = hi/h

        self.image.Rescale(wi/scale,hi/scale)

        self.Refresh(True)

    def OnPaint(self, evt):
        dc = wx.PaintDC(self)
        if self.image:
            dc.DrawBitmap(self.image.ConvertToBitmap(), 0,0)

# end of class ImagePanel


